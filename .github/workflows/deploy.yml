name: Deploy Godot Web Game to GitHub Pages and Android APK

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if version changed in project.godot
        id: version_check
        run: |
          if git diff HEAD^ HEAD -- project.godot | grep -E '^\+config/version='; then
            echo "Version changed"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version did not change"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Get version from project.godot
        if: steps.version_check.outputs.changed == 'true'
        id: get_version
        run: |
          VERSION=$(grep 'config/version=' project.godot | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Setup Godot
        if: steps.version_check.outputs.changed == 'true'
        uses: chickensoft-games/setup-godot@v1
        with:
          version: 4.3.0
          use-dotnet: false
          include-templates: true

      - name: Setup Java JDK
        if: steps.version_check.outputs.changed == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        if: steps.version_check.outputs.changed == 'true'
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: 33.0.0
          ndk-version: 23.2.8568313

      - name: Cache Android SDK
        if: steps.version_check.outputs.changed == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/sdk
            ~/.android/ndk
          key: android-sdk-${{ runner.os }}-api33-ndk23.2.8568313

      - name: Verify Godot installation
        if: steps.version_check.outputs.changed == 'true'
        run: godot --version

      - name: Create export directories
        if: steps.version_check.outputs.changed == 'true'
        run: |
          mkdir -p build/web
          mkdir -p build/android

      - name: Export project for web
        if: steps.version_check.outputs.changed == 'true'
        run: |
          godot --headless --verbose --export-release "Web" build/web/index.html
        env:
          DISPLAY: ":99"

      - name: Export project for Android
        if: steps.version_check.outputs.changed == 'true'
        run: |
          godot --headless --verbose --export-release "Android" build/android/patch-jumper.apk
        env:
          DISPLAY: ":99"
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}

      - name: Verify APK was created
        if: steps.version_check.outputs.changed == 'true'
        run: |
          if [ ! -f "build/android/patch-jumper.apk" ]; then
            echo "‚ùå APK export failed"
            exit 1
          fi
          echo "‚úÖ APK created successfully"
          ls -la build/android/

      - name: Add .nojekyll file
        if: steps.version_check.outputs.changed == 'true'
        run: touch build/web/.nojekyll

      - name: Deploy to GitHub Pages
        if: steps.version_check.outputs.changed == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web
          cname: false

      - name: Upload Android APK as artifact
        if: steps.version_check.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: patch-jumper-android-v${{ steps.get_version.outputs.version }}
          path: build/android/patch-jumper.apk
          retention-days: 30

      - name: Create GitHub Release
        if: steps.version_check.outputs.changed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            build/android/patch-jumper.apk
          body: |
            ## Release v${{ steps.get_version.outputs.version }}

            ### Downloads
            - **Android APK**: patch-jumper.apk
            - **Web Version**: Available at GitHub Pages

            ### Changes
            - Version bump to v${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Summary
        if: steps.version_check.outputs.changed == 'true'
        run: |
          echo "üéâ Build completed successfully!"
          echo "üì± Android APK: patch-jumper.apk"
          echo "üåê Web build deployed to GitHub Pages"
          echo "üè∑Ô∏è Version: v${{ steps.get_version.outputs.version }}"